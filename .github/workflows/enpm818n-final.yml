# File: .github/workflows/simple-ci-cd.yml
name: Simple CI/CD Pipeline

# Trigger on push to main branch
on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-2
  AWS_CLUSTER: 818n-g21-eks
  K8S_NAMESPACE: 818n-g21-ns
  SERVICES: "frontend cart checkout email recommendation shipping"
  ECR_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com

jobs:
  # 1) Build and Push Docker Images
#   build:
#     name: Build & Push Images
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Login to Amazon ECR
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build all services with Docker Compose
#         run: docker compose -f docker-compose.yml build

#       - name: Tag and push images to ECR
#         run: |
#           for svc in $SERVICES; do
#             echo "Processing service: $svc"
#             IMAGE_ID=$(docker compose -f docker-compose.yml images -q $svc)
#             if [ -z "$IMAGE_ID" ]; then
#               echo "No image found for $svc, skipping"
#               continue
#             fi
#             docker tag "$IMAGE_ID" "$ECR_URI/$svc:latest"
#             docker push "$ECR_URI/$svc:latest"
#           done

  # 2) Deploy to EKS using kubectl apply
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    # needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.AWS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Patch manifest image references
        run: |
          MANIFEST_PATH="../../opentelemetry-demo.yaml"
          for svc in $SERVICES; do
            sed -i "s|image: .*${svc}.*|image: ${ECR_URI}/${svc}:latest|g" "$MANIFEST_PATH"
          done

      - name: Apply Kubernetes manifest
        run: |
          kubectl apply -n ${{ env.K8S_NAMESPACE }} -f "../../opentelemetry-demo.yaml"
