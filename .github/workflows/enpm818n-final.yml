# File: .github/workflows/ci-cd.yml
name: CI/CD Pipeline with Helm

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
  EKS_CLUSTER: otel-demo-cluster
  K8S_NAMESPACE: otel-helm

jobs:
  # Step 1: Build & Push Docker Image for Frontend
  build-and-push-images:
    name: Build & Push Frontend Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names frontend || \
          aws ecr create-repository --repository-name frontend --region us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & push frontend image
        run: |
          docker build -t $ECR_REGISTRY/frontend:latest -f src/frontend/Dockerfile .
          docker push    $ECR_REGISTRY/frontend:latest

  # Step 2: Deploy with Helm
  deploy-with-helm:
    name: Deploy with Helm
    needs: build-and-push-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name $EKS_CLUSTER --region us-east-1

      - name: Add & update Helm repo
        run: |
          helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo update

      - name: Ensure namespace exists
        run: kubectl create namespace $K8S_NAMESPACE || true

      - name: Helm upgrade/install demo
        run: |
          helm upgrade --install otel-demo open-telemetry/opentelemetry-demo \
            --namespace $K8S_NAMESPACE \
            --set frontend.image.repository=$ECR_REGISTRY/frontend \
            --set frontend.image.tag=latest

      - name: Verify Kubernetes resources
        run: kubectl get all -n $K8S_NAMESPACE

  # Step 3: Rollback on Failure
  rollback:
    name: Rollback on Failure
    if: ${{ failure() }}
    needs: [build-and-push-images, deploy-with-helm]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name $EKS_CLUSTER --region us-east-1

      - name: Helm rollback to previous release
        run: helm rollback otel-demo 1 -n $K8S_NAMESPACE
